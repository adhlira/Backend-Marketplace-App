// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Roles {
  id             Int              @id @default(autoincrement())
  name           String
  Users          Users[]
  PermissionRole PermissionRole[]

  @@map("roles")
}

model Users {
  id           Int    @id @default(autoincrement())
  role_id      Int
  name         String
  email        String @unique
  address      String
  phone_number String @unique
  password     String

  Roles    Roles      @relation(fields: [role_id], references: [id])
  Tokens   Tokens[]
  Products Products[]
  Cart     Cart[]

  @@map("users")
}

model Tokens {
  id         Int      @id @default(autoincrement())
  user_id    Int
  token      String   @unique
  expired_at DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Users Users @relation(fields: [user_id], references: [id])

  @@map("tokens")
}

model Categories {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  Products Products[]

  @@map("categories")
}

model Sizes {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  ProductSize ProductSize[]
  Cart        Cart[]

  @@map("sizes")
}

model Colors {
  id           Int            @id @default(autoincrement())
  name         String
  ColorProduct ColorProduct[]
  Cart         Cart[]

  @@map("colors")
}

model Products {
  id          Int      @id @default(autoincrement())
  user_id     Int
  category_id Int
  name        String
  price       Float
  description String   @db.Text
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  Users        Users          @relation(fields: [user_id], references: [id])
  Categories   Categories     @relation(fields: [category_id], references: [id])
  ProductSize  ProductSize[]
  ColorProduct ColorProduct[]
  ImageProduct ImageProduct[]
  Cart         Cart[]

  @@map("products")
}

model ProductSize {
  product_id Int
  size_id    Int

  Products Products @relation(fields: [product_id], references: [id])
  Sizes    Sizes    @relation(fields: [size_id], references: [id])

  @@id([product_id, size_id])
  @@map("product_size")
}

model ColorProduct {
  product_id Int
  color_id   Int
  stock      Int

  Products Products @relation(fields: [product_id], references: [id])
  Colors   Colors   @relation(fields: [color_id], references: [id])

  @@id([product_id, color_id])
  @@map("color_product")
}

model ImageProduct {
  product_id Int
  image_url  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Products Products @relation(fields: [product_id], references: [id])

  @@id([product_id, image_url])
  @@map("image_product")
}

model Permissions {
  id             Int              @id @default(autoincrement())
  name           String
  PermissionRole PermissionRole[]

  @@map("permissions")
}

model PermissionRole {
  permission_id Int
  role_id       Int

  Permissions Permissions @relation(fields: [permission_id], references: [id])
  Roles       Roles       @relation(fields: [role_id], references: [id])

  @@id([permission_id, role_id])
  @@map("permission_role")
}

model Cart {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  size_id    Int
  color_id   Int
  quantity   Int
  total      Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Users    Users    @relation(fields: [user_id], references: [id])
  Products Products @relation(fields: [product_id], references: [id])
  Sizes    Sizes    @relation(fields: [size_id], references: [id])
  Colors   Colors   @relation(fields: [color_id], references: [id])

  @@map("cart")
}
